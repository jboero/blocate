#!/bin/bash
# Blocate v1.1 - MPL - John Boero - boeroboy@gmail.com
export tgt="${1:-.}"
export BINDEXDB="${BINDEXDB:-${2:-blocate.sqlite}}"
export BINDEXPARA=${BINDEXPARA:-4}
[ ! -t 0 ] && export BINDEXDB="${1:-blocate.sqlite}"	# If stdin, db=$1

sqlite3 "$BINDEXDB" \
	"CREATE TABLE IF NOT EXISTS inode_v1 \
	(id int NOT NULL PRIMARY KEY, parent int, name varchar(256));"

# Index a single path by just inode, parent inode, and name.
index()
{
	local path=$(echo "$1" | sed "s/''/'/g")
	local name=$(basename "$1" | sed "s/'/''/g" )
	local pare=$(dirname "$1")
	local ino=$(ls -di "$path" | awk '{print $1}')
	local pino=$(ls -di "$pare" | awk '{print $1}')
	# Don't index self where ino=pino (loop).  Also beware symlinks.
	if [ ${ino:-0} -eq ${pino:-1} ]; then
		return
	fi
	sqlite3 -cmd ".timeout 2000" "$BINDEXDB" \
		"insert or replace into inode_v1 (id, parent, name) \
		values ($ino, $pino, '$name');" || echo $1>2
}

export -f index
if [ ! -t 0 ]; then	# Index contents of stdin (cat)?
	cat | sed "s/'/''/g" | parallel --max-procs=$BINDEXPARA index {}
elif [[ -f "$tgt" ]]; then
	index "$tgt"
elif [[ -d "$tgt" ]]; then
	find "$tgt" -type d | parallel --max-procs=$BINDEXPARA index {}
fi
